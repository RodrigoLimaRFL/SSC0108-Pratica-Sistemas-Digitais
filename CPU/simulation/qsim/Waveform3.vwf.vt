// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "10/31/2023 15:01:15"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          CPU
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module CPU_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
reg CLK50;
reg resetMaster;
// wires                                               
wire Contador0;
wire Contador1;
wire Contador2;
wire Contador3;
wire Contador4;
wire Contador5;
wire Contador6;
wire Contador7;
wire [0:3] Reg01;
wire [0:3] Reg10;
wire [0:15] ROMout;

// assign statements (if any)                          
CPU i1 (
// port map - connection between master ports and signals/registers   
	.CLK(CLK),
	.CLK50(CLK50),
	.Contador0(Contador0),
	.Contador1(Contador1),
	.Contador2(Contador2),
	.Contador3(Contador3),
	.Contador4(Contador4),
	.Contador5(Contador5),
	.Contador6(Contador6),
	.Contador7(Contador7),
	.Reg01(Reg01),
	.Reg10(Reg10),
	.resetMaster(resetMaster),
	.ROMout(ROMout)
);
initial 
begin 
#4000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #25000 1'b1;
	#25000;
end 

// resetMaster
initial
begin
	resetMaster = 1'b1;
	resetMaster = #320000 1'b0;
end 
endmodule

